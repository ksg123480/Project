C# 
프로그램 확장자 = .cs ,헤더파일 x, 인클루드 x

Main이 클래스 안에 존재 static 을붙혀 직접 호출해서 사용

namespace 클래스 자체를 namespace 안에 서 관리
(namespace는 다수의 cs파일이 동일한 이름으로 사용가능)
namespace : 성격이나 하는일이 같고 비슷한 역할을 하는 에들을 묶는다.(class,구조체,열거형......)

CLR : 닷넷 프로그램에서 핵심적으로 돌아가는 엔진부

사용자가 파일을 실행 시키면 CLR이 샐행파일내의 IL(중간코드)로 읽어들여 다시 OS 가이해할수잇는 
네이트브 코드로 컴파일후 실행 이것을 JIT 컴파일(컴파일시간을 요구하지만 플랫폼에 최적화 된코드를 만들어냄)

데이터형식
-값형식 : 값을 담는(int,char,.....)
-참조형식 : 주소값을 담는 (힙에할당)

C#의 모든 데이터 형식은 object(참조형식,클래스형식)의 자식

숫자  문자열 : ToString() 메소드 이용
예) int a = 3;
      string b = a.ToString();

문자열  숫자 : Parse() 메소드 이용
예) int a = int.Parse(“12345”);
TryParse = bool 형
예) 
 if (int.TryParse(Console.ReadLine(), out result) == true)
                    //TryParse 리턴 탑입:bool 형
                    return result;
Console.ReadLine 읽어오는
Console.Write : 출력할문장

var :자동형식 지정(컴파일러가 자동으로 해당 변수의 형식을 지정

인자전달 ref와 out
ref: 수정을 안해도됨(반드시 매개변수들이 초기화 되어있어야함)

out: out은 인자전달시 반드시 수정할 목적을 때 사용(초기화 되어있지않아도됨)

가변길이 매개변수 : params키워등와 배열을 이용하여 선언

명명된 매개변수
선택적 매개변수

얕은 복사:(클래스) 스택의 가지고있는 주소를 복사하는것
깊은복사 : 힙메모리에 

this 자기자신을 가리키는 키워드(생성자 호출을명시적으로)

추상클래스: 완성되지않은 클래스

인터페이스=가상 : (완전추상)약속


부모가 가지고 있는 멤버함수를 재정의  할떄 
override          new
가상일떄     가상이아닐떄

foreach
foreach문은 배열을 위한 반복문입니다. 배열을 순회하며 각 데이터 요소에 차례대로 접근하도록 해줍니다. 
배열의 끝에 도달하면 자동으로 반복이 종료됩니다. 

IndexOf 함수
 if (mem.Id == id)
       return memlist.IndexOf(mem);  //IndexOf if절의 조건에 맞는 인덱서를 반환해줌

RemoveAt 함수
memlist.RemoveAt(idx);  //인덱서의 배열을 지워줌